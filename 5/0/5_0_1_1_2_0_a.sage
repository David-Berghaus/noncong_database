# Sage script to reproduce the database data

# Define some helper functions that are needed to transform u-v-factored expansions to L
def convert_from_K_to_L(expression_in_K, v_L):
    """
    Given an expression in K, convert the expression efficiently to L by plugging in v(w).
    """
    if expression_in_K == 0:
        return 0
    coeffs = list(expression_in_K.polynomial())
    res = coeffs[-1]
    for i in range(len(coeffs)-2,-1,-1): #Horner's method
        res = res*v_L+coeffs[i]
    return res

def transform_u_v_factored_q_expansion_to_L(q_expansion, L, v_L, u_interior_K, principal_cusp_width):
    """
    Given a q_expansion that has coefficients of the form (expression_in_K)*u**u_pow, convert the coefficients to L.
    """
    if principal_cusp_width == 1:
        u = L(u_interior_K)
    else:
        u = L.gen()
    leading_order_exponent = q_expansion.valuation()
    coeffs = list(q_expansion)
    coeffs_L = []
    for coeff in coeffs:
        if coeff == 0 or coeff == 1:
            u_pow = 0
        else:
            u_pow = coeff.degree()
        coeffs_L.append(convert_from_K_to_L(coeff[u_pow],v_L)*u**u_pow)
    P = LaurentSeriesRing(L,q_expansion.variable())
    return P(coeffs_L).shift(leading_order_exponent).O(q_expansion.prec())

res = {} #The dictionary in which we store the results
res["G"] = ArithmeticSubgroup_Permutation(S2="(2,4)(3,5)",S3="(1,2,3)")
res["is_congruence"] = True
principal_cusp_width = 5
res["monodromy_group"] = "A5"
P.<T> = PolynomialRing(QQ)
K.<v> = NumberField(P([-1, 1]),embedding=1.00000000000000+0.000000000000000*1j)
res["K"] = K
res["v"] = K.gen()
u_interior_K = -1
L.<w> = NumberField(P([1, 1]),embedding=-1.00000000000000+0.000000000000000*1j) #Base ring of the q-expansions in raw format
v_L = 1

# The pretty form of q-expansions involves powers of u, where u is given by
u_str = "(-1)^(1/5)"
res["u_str"] = u_str
# With embedding
res["u"] = QQbar(L.gen())
Pu.<u> = PolynomialRing(K)
Pq.<q_5> = LaurentSeriesRing(Pu)

# Store the q-expansions in pretty form into res
res["q_expansions"] = {}
weights = [0, 2, 4, 6]
for weight in weights:
    res["q_expansions"][weight] = {}
res["q_expansions"][0]["hauptmodul_pretty"] = Pq([0, -6*u^2, -20*u^3, 15*u^4, -36*u^5, 0, 84*u^7, 195*u^8, -100*u^9, 240*u^10, 0, -461*u^12, -1020*u^13, 540*u^14, -1144*u^15, 0, 1980*u^17, 4170*u^18, -2040*u^19, 4275*u^20, 0, -6984*u^22, -14340*u^23, 6940*u^24, -14076*u^25, 0, 21936*u^27, 44025*u^28, -20760*u^29, 41476*u^30, 0, -62484*u^32, -123620*u^33, 57630*u^34, -113244*u^35, 0, 166056*u^37, 324120*u^38, -148900*u^39, 289578*u^40, 0, -415310*u^42, -802440*u^43, 365490*u^44, -703220*u^45, 0, 989784*u^47, 1895095*u^48, -854940*u^49, 1632162*u^50, 0, -2261037*u^52, -4296720*u^53, 1925140*u^54, -3647652*u^55, 0, 4983272*u^57, 9406050*u^58, -4185600*u^59, 7882074*u^60, 0, -10637712*u^62, -19962440*u^63, 8834265*u^64, -16540932*u^65, 0, 22082820*u^67, 41221545*u^68, -18146060*u^69, 33809004*u^70, 0, -44699783*u^72, -83050200*u^73, 36395190*u^74, -67499448*u^75, 0, 88461804*u^77, 163655440*u^78, -71413680*u^79, 131908728*u^80, 0, -171499026*u^82, -316048740*u^83, 137394965*u^84, -252825768*u^85, 0, 326313488*u^87, 599207325*u^88, -259571700*u^89, 476016170*u^90, 0, -610265334*u^92, -1116966920*u^93, 482315580*u^94, -881678544*u^95, 0, 1123344132*u^97, 2049821220*u^98, -882473860*u^99, 1608453336*u^100, 0, -2037572016*u^102, -3707623140*u^103, 1591780890*u^104, -2893336080*u^105, 0, 3645674328*u^107, 6616386195*u^108, -2833223700*u^109, 5136783072*u^110, 0, -6440194515*u^112, -11659461720*u^113, 4980713290*u^114, -9008723292*u^115, 0, 11241827200*u^117, 20305705080*u^118, -8654527200*u^119, 15618645043*u^120, 0, -19404684360*u^122, -34974400840*u^123, 14874786555*u^124, -26787615528*u^125, 0, 33143479344*u^127, 59615276895*u^128, -25303633700*u^129, 45478200612*u^130, 0, -56049160100*u^132, -100622231340*u^133, 42627977400*u^134, -76471208740*u^135, 0, 93898196532*u^137, 168264158870*u^138, -71155707480*u^139, 127420670913*u^140, 0, -155910882684*u^142, -278908286640*u^143, 117743887180*u^144, -210491211288*u^145, 0, 256699104028*u^147, 458455349145*u^148, -193227275160*u^149, 344878547388*u^150, 0, -419257493649*u^152, -747611124500*u^153, 314612652840*u^154, -560671955352*u^155, 0, 679536134544*u^157, 1209932624820*u^158, -508418256600*u^159, 904731459648*u^160, 0, -1093383109696*u^162, -1944034909620*u^163, 815742015915*u^164, -1449590569652*u^165, 0, 1747038067884*u^167, 3102016651920*u^168, -1299894172200*u^169, 2306858711886*u^170, 0, -2772897290814*u^172, -4917120118320*u^173, 2057855555440*u^174, -3647309491968*u^175, 0, 4373095707180*u^177, 7745057337900*u^178, -3237365472300*u^179, 5730824041991*u^180, 0, -6854591538588*u^182, -12125445967840*u^183, 5062319503755*u^184, -8950836653064*u^185, 0, 10681146584136*u^187, 18872735286765*u^188, -7870301618960*u^189, 13899978348624*u^190, 0, -16549962860183*u^192, -29210159993820*u^193, 12167857466490*u^194, -21466638814040*u^195, 0, 25504221271980*u^197, 44966261602220*u^198, -18711481462680*u^199, 32976365634027*u^200, 0, -39097605286314*u^202, -68861977538040*u^203, 28625874443350*u^204, -50398127746644*u^205, 0, 59633911533552*u^207, 104928395149755*u^208, -43575836157840*u^209, 76643945130786*u^210, 0, -90514585993233*u^212, -159112242584520*u^213, 66015281464980*u^214, -116002564362108*u^215]).O(215)
res["q_expansions"][0]["hauptmodul_pretty"] += Pq.gen()**(-1) #Don't forget the first coeff, which we cannot construct from a list
res["q_expansions"][4]["cuspforms_pretty"] = []
res["q_expansions"][4]["cuspforms_pretty"].append(Pq([0, 1, -u, 7*u^2, 7*u^3, 0, -7*u^5, 6*u^6, 15*u^7, 22*u^8, 0, -43*u^10, 49*u^11, -28*u^12, -6*u^13, 0, -41*u^15, 91*u^16, -22*u^17, -35*u^18, 0, 42*u^20, 43*u^21, 162*u^22, 105*u^23, 0, 28*u^25, -35*u^26, 42*u^27, 160*u^28, 0, 42*u^30, -161*u^31, -301*u^32, -91*u^33, 0, 154*u^35, -314*u^36, 35*u^37, -196*u^38, 0, -203*u^40, -42*u^41, 92*u^42, -301*u^43, 0, -162*u^45, 196*u^46, -287*u^47, -307*u^48, 0, 637*u^50, -196*u^51, 82*u^52, 35*u^53, 0, 90*u^55, -245*u^56, -160*u^57, -280*u^58, 0, -518*u^60, -42*u^61, 132*u^62, 167*u^63, 0, 301*u^65, 141*u^66, 637*u^67, 1134*u^68, 0, 412*u^70, 330*u^71, -763*u^72, 314*u^73, 0, -245*u^75, -258*u^76, 196*u^77, 510*u^78, 0, -839*u^80, 203*u^81, 777*u^82, 294*u^83, 0, -92*u^85, 1120*u^86, -645*u^87, -945*u^88, 0, -168*u^90, 1134*u^91, 294*u^92, -196*u^93, 0, -1127*u^95, 1246*u^96, 307*u^97, -946*u^98, 0, 1302*u^100, -637*u^101, 532*u^102, -420*u^103, 0, -82*u^105, -1269*u^106, -245*u^107, 1070*u^108, 0, -2198*u^110, -246*u^111, -503*u^112, 245*u^113, 0, 1120*u^115, -616*u^116, 280*u^117, 546*u^118, 0, 518*u^120, 518*u^121, -1421*u^122, 294*u^123, 0, -132*u^125, -874*u^126, 1455*u^127, 644*u^128, 0, 1092*u^130, -2107*u^131, -210*u^132, -141*u^133, 0, 1365*u^135, 411*u^136, -1134*u^137, -595*u^138, 0, 1372*u^140, -412*u^141, 1204*u^142, -902*u^143, 0, 763*u^145, -2149*u^146, -2198*u^147, -3200*u^148, 0, 202*u^150, -525*u^151, 2002*u^152, 258*u^153, 0, -1372*u^155, 406*u^156, -510*u^157, 574*u^158, 0, 972*u^160, 839*u^161, -3803*u^162, -1421*u^163, 0, -777*u^165, 4116*u^166, 630*u^167, -1413*u^168, 0, -770*u^170, 644*u^171, 1512*u^172, -1120*u^173, 0, 1763*u^175, -1960*u^176, 945*u^177, 2585*u^178, 0, -2758*u^180, 168*u^181, -3626*u^182, 2430*u^183, 0, -294*u^185, -3913*u^186, 1372*u^187, -210*u^188, 0, -2378*u^190, 1169*u^191, 3067*u^192, -1246*u^193, 0, -2149*u^195, 2346*u^196, 946*u^197, 4900*u^198, 0, 987*u^200, -1302*u^201, 960*u^202, 4459*u^203, 0, -532*u^205, 3564*u^206, 1148*u^207, 1505*u^208, 0, 4307*u^210, 574*u^211, 2884*u^212, 1269*u^213, 0, -525*u^215]).O(217))
res["q_expansions"][4]["modforms_pretty"] = []
res["q_expansions"][4]["modforms_pretty"].append(Pq([1, 0, 0, 0, 0, -240*u^5, 0, 0, 0, 0, 2160*u^10, 0, 0, 0, 0, -6720*u^15, 0, 0, 0, 0, 17520*u^20, 0, 0, 0, 0, -30240*u^25, 0, 0, 0, 0, 60480*u^30, 0, 0, 0, 0, -82560*u^35, 0, 0, 0, 0, 140400*u^40, 0, 0, 0, 0, -181680*u^45, 0, 0, 0, 0, 272160*u^50, 0, 0, 0, 0, -319680*u^55, 0, 0, 0, 0, 490560*u^60, 0, 0, 0, 0, -527520*u^65, 0, 0, 0, 0, 743040*u^70, 0, 0, 0, 0, -846720*u^75, 0, 0, 0, 0, 1123440*u^80, 0, 0, 0, 0, -1179360*u^85, 0, 0, 0, 0, 1635120*u^90, 0, 0, 0, 0, -1646400*u^95, 0, 0, 0, 0, 2207520*u^100, 0, 0, 0, 0, -2311680*u^105, 0, 0, 0, 0, 2877120*u^110, 0, 0, 0, 0, -2920320*u^115, 0, 0, 0, 0, 3931200*u^120, 0, 0, 0, 0, -3780240*u^125, 0, 0, 0, 0, 4747680*u^130, 0, 0, 0, 0, -4905600*u^135, 0, 0, 0, 0, 6026880*u^140, 0, 0, 0, 0, -5853600*u^145, 0, 0, 0, 0, 7620480*u^150, 0, 0, 0, 0, -7150080*u^155, 0, 0, 0, 0, 8987760*u^160, 0, 0, 0, 0, -8951040*u^165, 0, 0, 0, 0, 10614240*u^170, 0, 0, 0, 0, -10402560*u^175, 0, 0, 0, 0, 13262640*u^180, 0, 0, 0, 0, -12156960*u^185, 0, 0, 0, 0, 14817600*u^190, 0, 0, 0, 0, -14770560*u^195, 0, 0, 0, 0, 17690400*u^200, 0, 0, 0, 0, -16541280*u^205, 0, 0, 0, 0, 20805120*u^210, 0, 0, 0, 0, -19081920*u^215]).O(216))
res["q_expansions"][4]["modforms_pretty"].append(Pq([0, 1, -u, 7*u^2, 7*u^3, 0, -7*u^5, 6*u^6, 15*u^7, 22*u^8, 0, -43*u^10, 49*u^11, -28*u^12, -6*u^13, 0, -41*u^15, 91*u^16, -22*u^17, -35*u^18, 0, 42*u^20, 43*u^21, 162*u^22, 105*u^23, 0, 28*u^25, -35*u^26, 42*u^27, 160*u^28, 0, 42*u^30, -161*u^31, -301*u^32, -91*u^33, 0, 154*u^35, -314*u^36, 35*u^37, -196*u^38, 0, -203*u^40, -42*u^41, 92*u^42, -301*u^43, 0, -162*u^45, 196*u^46, -287*u^47, -307*u^48, 0, 637*u^50, -196*u^51, 82*u^52, 35*u^53, 0, 90*u^55, -245*u^56, -160*u^57, -280*u^58, 0, -518*u^60, -42*u^61, 132*u^62, 167*u^63, 0, 301*u^65, 141*u^66, 637*u^67, 1134*u^68, 0, 412*u^70, 330*u^71, -763*u^72, 314*u^73, 0, -245*u^75, -258*u^76, 196*u^77, 510*u^78, 0, -839*u^80, 203*u^81, 777*u^82, 294*u^83, 0, -92*u^85, 1120*u^86, -645*u^87, -945*u^88, 0, -168*u^90, 1134*u^91, 294*u^92, -196*u^93, 0, -1127*u^95, 1246*u^96, 307*u^97, -946*u^98, 0, 1302*u^100, -637*u^101, 532*u^102, -420*u^103, 0, -82*u^105, -1269*u^106, -245*u^107, 1070*u^108, 0, -2198*u^110, -246*u^111, -503*u^112, 245*u^113, 0, 1120*u^115, -616*u^116, 280*u^117, 546*u^118, 0, 518*u^120, 518*u^121, -1421*u^122, 294*u^123, 0, -132*u^125, -874*u^126, 1455*u^127, 644*u^128, 0, 1092*u^130, -2107*u^131, -210*u^132, -141*u^133, 0, 1365*u^135, 411*u^136, -1134*u^137, -595*u^138, 0, 1372*u^140, -412*u^141, 1204*u^142, -902*u^143, 0, 763*u^145, -2149*u^146, -2198*u^147, -3200*u^148, 0, 202*u^150, -525*u^151, 2002*u^152, 258*u^153, 0, -1372*u^155, 406*u^156, -510*u^157, 574*u^158, 0, 972*u^160, 839*u^161, -3803*u^162, -1421*u^163, 0, -777*u^165, 4116*u^166, 630*u^167, -1413*u^168, 0, -770*u^170, 644*u^171, 1512*u^172, -1120*u^173, 0, 1763*u^175, -1960*u^176, 945*u^177, 2585*u^178, 0, -2758*u^180, 168*u^181, -3626*u^182, 2430*u^183, 0, -294*u^185, -3913*u^186, 1372*u^187, -210*u^188, 0, -2378*u^190, 1169*u^191, 3067*u^192, -1246*u^193, 0, -2149*u^195, 2346*u^196, 946*u^197, 4900*u^198, 0, 987*u^200, -1302*u^201, 960*u^202, 4459*u^203, 0, -532*u^205, 3564*u^206, 1148*u^207, 1505*u^208, 0, 4307*u^210, 574*u^211, 2884*u^212, 1269*u^213]).O(216))
res["q_expansions"][6]["cuspforms_pretty"] = []
res["q_expansions"][6]["cuspforms_pretty"].append(Pq([0, 1, 0, -15*u^2, -22*u^3, 0, 108*u^5, -110*u^6, 270*u^7, 198*u^8, 0, 27*u^10, -210*u^11, 100*u^12, 216*u^13, 0, -106*u^15, -405*u^16, -2160*u^17, -1765*u^18, 0, 2082*u^20, -2700*u^21, -810*u^22, -2430*u^23, 0, 1728*u^25, -3645*u^26, 1340*u^27, -2160*u^28, 0, -3298*u^30, 1350*u^31, -5805*u^32, -7344*u^33, 0, 6444*u^35, -1970*u^36, 3780*u^37, 1956*u^38, 0, 14877*u^40, -12960*u^41, 6820*u^42, 12906*u^43, 0, 648*u^45, -16740*u^46, -18390*u^47, -3843*u^48, 0, -8613*u^50, -10840*u^51, 11610*u^52, 5940*u^53, 0, -26460*u^55, 34035*u^56, 4320*u^57, 1080*u^58, 0, -7198*u^60, 59400*u^61, -30420*u^62, -26362*u^63, 0, 16416*u^65, 23995*u^66, 45630*u^67, 13446*u^68, 0, -41148*u^70, 21060*u^71, 32365*u^72, 20736*u^73, 0, 19930*u^75, -13770*u^76, 2160*u^77, 45290*u^78, 0, 18441*u^80, -21600*u^81, -44145*u^82, 18996*u^83, 0, -114912*u^85, 41040*u^86, -33210*u^87, -62505*u^88, 0, -4088*u^90, 14580*u^91, 168270*u^92, 83376*u^93, 0, 39258*u^95, 35710*u^96, -43200*u^97, 113346*u^98, 0, 702*u^100, -7020*u^101, -95540*u^102, 52920*u^103, 0, 40608*u^105, -83835*u^106, 50490*u^107, -81370*u^108, 0, 71022*u^110, -28300*u^111, -30375*u^112, -209520*u^113, 0, 25920*u^115, -49320*u^116, 105840*u^117, 15174*u^118, 0, -25322*u^120, -108000*u^121, -266355*u^122, -224444*u^123, 0, 237168*u^125, -185150*u^126, -141210*u^127, -332124*u^128, 0, -143748*u^130, 45630*u^131, 209270*u^132, -85644*u^133, 0, -219510*u^135, 115155*u^136, -90720*u^137, 29795*u^138, 0, 417852*u^140, -54000*u^141, -83700*u^142, 378612*u^143, 0, 60048*u^145, -28755*u^146, -60340*u^147, 334800*u^148, 0, -51298*u^150, -419850*u^151, 213570*u^152, 248832*u^153, 0, -53832*u^155, -110210*u^156, -271080*u^157, -92934*u^158, 0, 91692*u^160, 101520*u^161, 52675*u^162, -219294*u^163, 0, -46332*u^165, -165780*u^166, 367740*u^167, -305997*u^168, 0, -500670*u^170, 424520*u^171, -169560*u^172, -254880*u^173, 0, 496638*u^175, 195480*u^176, 563760*u^177, 368415*u^178, 0, 338402*u^180, -133920*u^181, -108030*u^182, -208980*u^183, 0, -653184*u^185, 356265*u^186, -48600*u^187, 424710*u^188, 0, -401598*u^190, 591450*u^191, -108005*u^192, 590976*u^193, 0, 300546*u^195, 600210*u^196, -52920*u^197, -42100*u^198, 0, -531213*u^200, 777600*u^201, 254880*u^202, 224586*u^203, 0, -488592*u^205, -186300*u^206, -330280*u^207, -236655*u^208, 0, 445877*u^210, -458460*u^211, 509220*u^212, 83916*u^213, 0, -895050*u^215]).O(217))
res["q_expansions"][6]["cuspforms_pretty"].append(Pq([0, 0, 1, 2*u, -5*u^2, 0, -5*u^4, 4*u^5, 15*u^6, -40*u^7, 0, -50*u^9, -19*u^10, 32*u^11, -90*u^12, 0, -185*u^14, -136*u^15, -2*u^16, 70*u^17, 0, -240*u^19, -223*u^20, 12*u^21, 465*u^22, 0, 260*u^24, 110*u^25, 362*u^26, 80*u^27, 0, 1100*u^29, 551*u^30, 304*u^31, -1085*u^32, 0, 890*u^34, 384*u^35, -1415*u^36, 40*u^37, 0, -400*u^39, 882*u^40, -2128*u^41, 2215*u^42, 0, -750*u^44, 1544*u^45, 713*u^46, -800*u^47, 0, -130*u^49, -2004*u^50, 752*u^51, -3095*u^52, 0, -270*u^54, -3880*u^55, -1760*u^56, 1960*u^57, 0, -2000*u^59, 2202*u^60, 4392*u^61, 1815*u^62, 0, -4285*u^64, -1586*u^65, 8417*u^66, -1680*u^67, 0, -1000*u^69, -10830*u^70, 1112*u^71, -50*u^72, 0, 5535*u^74, 4608*u^75, 2156*u^76, -5020*u^77, 0, 1880*u^79, 12877*u^80, -858*u^81, 870*u^82, 0, -3820*u^84, -4720*u^85, -16845*u^86, 10440*u^87, 0, -2480*u^89, 3486*u^90, -12096*u^91, -9020*u^92, 0, -55*u^94, 10944*u^95, -7843*u^96, -980*u^97, 0, 14400*u^99, -9263*u^100, -9048*u^101, 12540*u^102, 0, 15370*u^104, 1554*u^105, 13055*u^106, -13440*u^107, 0, -5860*u^109, 16226*u^110, 10832*u^111, 14635*u^112, 0, 7040*u^114, -4064*u^115, 10880*u^116, 10620*u^117, 0, 9800*u^119, -17198*u^120, 31754*u^121, -35210*u^122, 0, -8460*u^124, 2324*u^125, -345*u^126, 24280*u^127, 0, -4800*u^129, 14737*u^130, -13360*u^131, 16065*u^132, 0, -52995*u^134, -35616*u^135, 5046*u^136, -24210*u^137, 0, -41200*u^139, -46148*u^140, -12136*u^141, 4610*u^142, 0, 37925*u^144, -3686*u^145, -8198*u^146, -36400*u^147, 0, -10100*u^149, -2325*u^150, 16472*u^151, 9270*u^152, 0, -11660*u^154, 44304*u^155, 20190*u^156, 19460*u^157, 0, -4320*u^159, 27841*u^160, -40818*u^161, -55585*u^162, 0, -48435*u^164, -8136*u^165, -51570*u^166, 11520*u^167, 0, 70460*u^169, 65916*u^170, 22512*u^171, 17440*u^172, 0, 46555*u^174, -7640*u^175, -10305*u^176, 23230*u^177, 0, -18000*u^179, -16488*u^180, -4396*u^181, -8010*u^182, 0, 107790*u^184, 50578*u^185, 11132*u^186, -24480*u^187, 0, 56900*u^189, -61799*u^190, 20472*u^191, 90430*u^192, 0, 56815*u^194, -19056*u^195, 108446*u^196, -12200*u^197, 0, 55920*u^199, 72702*u^200, -15840*u^201, 49175*u^202, 0, -140780*u^204, 32376*u^205, -51492*u^206, 72640*u^207, 0, -88350*u^209, -93394*u^210, -77296*u^211, -76065*u^212, 0, -16725*u^214]).O(217))
res["q_expansions"][6]["modforms_pretty"] = []
res["q_expansions"][6]["modforms_pretty"].append(Pq([1, 0, 0, 0, 0, 504*u^5, 0, 0, 0, 0, -16632*u^10, 0, 0, 0, 0, 122976*u^15, 0, 0, 0, 0, -532728*u^20, 0, 0, 0, 0, 1575504*u^25, 0, 0, 0, 0, -4058208*u^30, 0, 0, 0, 0, 8471232*u^35, 0, 0, 0, 0, -17047800*u^40, 0, 0, 0, 0, 29883672*u^45, 0, 0, 0, 0, -51991632*u^50, 0, 0, 0, 0, 81170208*u^55, 0, 0, 0, 0, -129985632*u^60, 0, 0, 0, 0, 187132176*u^65, 0, 0, 0, 0, -279550656*u^70, 0, 0, 0, 0, 384422976*u^75, 0, 0, 0, 0, -545530104*u^80, 0, 0, 0, 0, 715608432*u^85, 0, 0, 0, 0, -986161176*u^90, 0, 0, 0, 0, 1247954400*u^95, 0, 0, 0, 0, -1665307728*u^100, 0, 0, 0, 0, 2066980608*u^105, 0, 0, 0, 0, -2678616864*u^110, 0, 0, 0, 0, 3243917376*u^115, 0, 0, 0, 0, -4159663200*u^120, 0, 0, 0, 0, 4923450504*u^125, 0, 0, 0, 0, -6175361808*u^130, 0, 0, 0, 0, 7261732800*u^135, 0, 0, 0, 0, -8954092224*u^140, 0, 0, 0, 0, 10337619600*u^145, 0, 0, 0, 0, -12685958208*u^150, 0, 0, 0, 0, 14429092608*u^155, 0, 0, 0, 0, -17456963832*u^160, 0, 0, 0, 0, 19805530752*u^165, 0, 0, 0, 0, -23615078256*u^170, 0, 0, 0, 0, 26481071232*u^175, 0, 0, 0, 0, -31587041304*u^180, 0, 0, 0, 0, 34949354832*u^185, 0, 0, 0, 0, -41182495200*u^190, 0, 0, 0, 0, 45660250944*u^195, 0, 0, 0, 0, -53291422800*u^200, 0, 0, 0, 0, 58391525808*u^205, 0, 0, 0, 0, -68210360064*u^210, 0, 0, 0, 0, 74092255776*u^215]).O(216))
res["q_expansions"][6]["modforms_pretty"].append(Pq([0, 1, 0, -15*u^2, -22*u^3, 0, 108*u^5, -110*u^6, 270*u^7, 198*u^8, 0, 27*u^10, -210*u^11, 100*u^12, 216*u^13, 0, -106*u^15, -405*u^16, -2160*u^17, -1765*u^18, 0, 2082*u^20, -2700*u^21, -810*u^22, -2430*u^23, 0, 1728*u^25, -3645*u^26, 1340*u^27, -2160*u^28, 0, -3298*u^30, 1350*u^31, -5805*u^32, -7344*u^33, 0, 6444*u^35, -1970*u^36, 3780*u^37, 1956*u^38, 0, 14877*u^40, -12960*u^41, 6820*u^42, 12906*u^43, 0, 648*u^45, -16740*u^46, -18390*u^47, -3843*u^48, 0, -8613*u^50, -10840*u^51, 11610*u^52, 5940*u^53, 0, -26460*u^55, 34035*u^56, 4320*u^57, 1080*u^58, 0, -7198*u^60, 59400*u^61, -30420*u^62, -26362*u^63, 0, 16416*u^65, 23995*u^66, 45630*u^67, 13446*u^68, 0, -41148*u^70, 21060*u^71, 32365*u^72, 20736*u^73, 0, 19930*u^75, -13770*u^76, 2160*u^77, 45290*u^78, 0, 18441*u^80, -21600*u^81, -44145*u^82, 18996*u^83, 0, -114912*u^85, 41040*u^86, -33210*u^87, -62505*u^88, 0, -4088*u^90, 14580*u^91, 168270*u^92, 83376*u^93, 0, 39258*u^95, 35710*u^96, -43200*u^97, 113346*u^98, 0, 702*u^100, -7020*u^101, -95540*u^102, 52920*u^103, 0, 40608*u^105, -83835*u^106, 50490*u^107, -81370*u^108, 0, 71022*u^110, -28300*u^111, -30375*u^112, -209520*u^113, 0, 25920*u^115, -49320*u^116, 105840*u^117, 15174*u^118, 0, -25322*u^120, -108000*u^121, -266355*u^122, -224444*u^123, 0, 237168*u^125, -185150*u^126, -141210*u^127, -332124*u^128, 0, -143748*u^130, 45630*u^131, 209270*u^132, -85644*u^133, 0, -219510*u^135, 115155*u^136, -90720*u^137, 29795*u^138, 0, 417852*u^140, -54000*u^141, -83700*u^142, 378612*u^143, 0, 60048*u^145, -28755*u^146, -60340*u^147, 334800*u^148, 0, -51298*u^150, -419850*u^151, 213570*u^152, 248832*u^153, 0, -53832*u^155, -110210*u^156, -271080*u^157, -92934*u^158, 0, 91692*u^160, 101520*u^161, 52675*u^162, -219294*u^163, 0, -46332*u^165, -165780*u^166, 367740*u^167, -305997*u^168, 0, -500670*u^170, 424520*u^171, -169560*u^172, -254880*u^173, 0, 496638*u^175, 195480*u^176, 563760*u^177, 368415*u^178, 0, 338402*u^180, -133920*u^181, -108030*u^182, -208980*u^183, 0, -653184*u^185, 356265*u^186, -48600*u^187, 424710*u^188, 0, -401598*u^190, 591450*u^191, -108005*u^192, 590976*u^193, 0, 300546*u^195, 600210*u^196, -52920*u^197, -42100*u^198, 0, -531213*u^200, 777600*u^201, 254880*u^202, 224586*u^203, 0, -488592*u^205, -186300*u^206, -330280*u^207, -236655*u^208, 0, 445877*u^210, -458460*u^211, 509220*u^212, 83916*u^213]).O(216))
res["q_expansions"][6]["modforms_pretty"].append(Pq([0, 0, 1, 2*u, -5*u^2, 0, -5*u^4, 4*u^5, 15*u^6, -40*u^7, 0, -50*u^9, -19*u^10, 32*u^11, -90*u^12, 0, -185*u^14, -136*u^15, -2*u^16, 70*u^17, 0, -240*u^19, -223*u^20, 12*u^21, 465*u^22, 0, 260*u^24, 110*u^25, 362*u^26, 80*u^27, 0, 1100*u^29, 551*u^30, 304*u^31, -1085*u^32, 0, 890*u^34, 384*u^35, -1415*u^36, 40*u^37, 0, -400*u^39, 882*u^40, -2128*u^41, 2215*u^42, 0, -750*u^44, 1544*u^45, 713*u^46, -800*u^47, 0, -130*u^49, -2004*u^50, 752*u^51, -3095*u^52, 0, -270*u^54, -3880*u^55, -1760*u^56, 1960*u^57, 0, -2000*u^59, 2202*u^60, 4392*u^61, 1815*u^62, 0, -4285*u^64, -1586*u^65, 8417*u^66, -1680*u^67, 0, -1000*u^69, -10830*u^70, 1112*u^71, -50*u^72, 0, 5535*u^74, 4608*u^75, 2156*u^76, -5020*u^77, 0, 1880*u^79, 12877*u^80, -858*u^81, 870*u^82, 0, -3820*u^84, -4720*u^85, -16845*u^86, 10440*u^87, 0, -2480*u^89, 3486*u^90, -12096*u^91, -9020*u^92, 0, -55*u^94, 10944*u^95, -7843*u^96, -980*u^97, 0, 14400*u^99, -9263*u^100, -9048*u^101, 12540*u^102, 0, 15370*u^104, 1554*u^105, 13055*u^106, -13440*u^107, 0, -5860*u^109, 16226*u^110, 10832*u^111, 14635*u^112, 0, 7040*u^114, -4064*u^115, 10880*u^116, 10620*u^117, 0, 9800*u^119, -17198*u^120, 31754*u^121, -35210*u^122, 0, -8460*u^124, 2324*u^125, -345*u^126, 24280*u^127, 0, -4800*u^129, 14737*u^130, -13360*u^131, 16065*u^132, 0, -52995*u^134, -35616*u^135, 5046*u^136, -24210*u^137, 0, -41200*u^139, -46148*u^140, -12136*u^141, 4610*u^142, 0, 37925*u^144, -3686*u^145, -8198*u^146, -36400*u^147, 0, -10100*u^149, -2325*u^150, 16472*u^151, 9270*u^152, 0, -11660*u^154, 44304*u^155, 20190*u^156, 19460*u^157, 0, -4320*u^159, 27841*u^160, -40818*u^161, -55585*u^162, 0, -48435*u^164, -8136*u^165, -51570*u^166, 11520*u^167, 0, 70460*u^169, 65916*u^170, 22512*u^171, 17440*u^172, 0, 46555*u^174, -7640*u^175, -10305*u^176, 23230*u^177, 0, -18000*u^179, -16488*u^180, -4396*u^181, -8010*u^182, 0, 107790*u^184, 50578*u^185, 11132*u^186, -24480*u^187, 0, 56900*u^189, -61799*u^190, 20472*u^191, 90430*u^192, 0, 56815*u^194, -19056*u^195, 108446*u^196, -12200*u^197, 0, 55920*u^199, 72702*u^200, -15840*u^201, 49175*u^202, 0, -140780*u^204, 32376*u^205, -51492*u^206, 72640*u^207, 0, -88350*u^209, -93394*u^210, -77296*u^211, -76065*u^212]).O(216))

# Now consider the q-expansions in raw format defined over L
Pq.<q_5> = LaurentSeriesRing(L)
for weight in weights:
    if "hauptmodul_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["hauptmodul_raw"] = transform_u_v_factored_q_expansion_to_L(res["q_expansions"][weight]["hauptmodul_pretty"],L,v_L,u_interior_K,principal_cusp_width)
    if "cuspforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["cuspforms_raw"] = [transform_u_v_factored_q_expansion_to_L(cuspform,L,v_L,u_interior_K,principal_cusp_width) for cuspform in res["q_expansions"][weight]["cuspforms_pretty"]]
    if "modforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["modforms_raw"] = [transform_u_v_factored_q_expansion_to_L(modform,L,v_L,u_interior_K,principal_cusp_width) for modform in res["q_expansions"][weight]["modforms_pretty"]]

# Add the Eisenstein scaling constants as well
res["q_expansions"][4]["eisenstein_basis_factors"] = {}
res["q_expansions"][4]["eisenstein_canonical_normalizations"] = {}
res["q_expansions"][6]["eisenstein_basis_factors"] = {}
res["q_expansions"][6]["eisenstein_canonical_normalizations"] = {}

# Now add the curve
F.<x> = FunctionField(L)
res["curve"] = (F([-36, 105, -100, 30, 0, 1]))/(F([1]))

# Now add the embeddings
res["embeddings"] = {('(1)(2 3)(4 5)', '(1 2 4)(3)(5)', '(1 2 3 4 5)'): 1}
