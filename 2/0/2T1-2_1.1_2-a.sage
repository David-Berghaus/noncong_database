# Sage script to reproduce the database data

# Define some helper functions that are needed to transform u-v-factored expansions to L
def convert_from_K_to_L(expression_in_K, v_L):
    """
    Given an expression in K, convert the expression efficiently to L by plugging in v(w).
    """
    if expression_in_K == 0:
        return 0
    coeffs = list(expression_in_K.polynomial())
    res = coeffs[-1]
    for i in range(len(coeffs)-2,-1,-1): #Horner's method
        res = res*v_L+coeffs[i]
    return res

def transform_u_v_factored_q_expansion_to_L(q_expansion, L, v_L, u_interior_K, principal_cusp_width):
    """
    Given a q_expansion that has coefficients of the form (expression_in_K)*u**u_pow, convert the coefficients to L.
    """
    if principal_cusp_width == 1:
        u = L(u_interior_K)
    else:
        u = L.gen()
    leading_order_exponent = q_expansion.valuation()
    coeffs = list(q_expansion)
    coeffs_L = []
    for coeff in coeffs:
        if coeff == 0 or coeff == 1:
            u_pow = 0
        else:
            u_pow = coeff.degree()
        coeffs_L.append(convert_from_K_to_L(coeff[u_pow],v_L)*u**u_pow)
    P = LaurentSeriesRing(L,q_expansion.variable())
    return P(coeffs_L).shift(leading_order_exponent).O(q_expansion.prec())

res = {} #The dictionary in which we store the results
res["G"] = ArithmeticSubgroup_Permutation(S2="(1,2)",S3="()")
res["is_congruence"] = True
principal_cusp_width = 2
res["monodromy_group"] = "C2"
P.<T> = PolynomialRing(QQ)
K.<v> = NumberField(P([-1, 1]),embedding=1.00000000000000+0.000000000000000*1j)
res["K"] = K
res["v"] = K.gen()
u_interior_K = 1
L.<w> = NumberField(P([-1, 1]),embedding=1.00000000000000+0.000000000000000*1j) #Base ring of the q-expansions in raw format
v_L = 1

# The pretty form of q-expansions involves powers of u, where u is given by
u_str = "(1)^(1/2)"
res["u_str"] = u_str
# With embedding
res["u"] = QQbar(L.gen())
Pu.<u> = PolynomialRing(K)
Pq.<q_2> = LaurentSeriesRing(Pu)

# Store the q-expansions in pretty form into res
res["q_expansions"] = {}
weights = [0, 2, 4, 6]
for weight in weights:
    res["q_expansions"][weight] = {}
res["q_expansions"][0]["hauptmodul_pretty"] = Pq([0, -492, 0, -22590, 0, -367400, 0, -3764865, 0, -28951452, 0, -182474434, 0, -990473160, 0, -4780921725, 0, -20974230680, 0, -84963769662, 0, -321583404672, 0, -1147744866180, 0, -3890805976500, 0, -12601590210180, 0, -39183052547592, 0, -117437602167291, 0, -340431109329600, 0, -957251463332600, 0, -2617490612355240, 0, -6975126788952456, 0, -18149106017123576, 0, -46187557595906250, 0, -115135568202054600, 0, -281505593222940405, 0, -675890080287210828, 0, -1595305053046623348, 0, -3705208012358354920, 0, -8475520921963167375, 0, -19109747530204119360, 0, -42500900825369875922, 0, -93301670575951530888, 0, -202301359346133576810, 0, -433486285518125772400, 0, -918437223895024356390, 0, -1925017693931023920000, 0, -3993278138833370998429, 0, -8201981217785384211960, 0, -16686865431994492577250, 0, -33640210291899787337600, 0, -67223559272606102388954, 0, -133200155597034220309836, 0, -261782971928371763966230, 0, -510454036459631903317200, 0, -987798622887232886861235, 0, -1897527194451150848071480, 0, -3619266646773727865876280, 0, -6855918165483388779133440, 0, -12900822097926147222444350, 0, -24119330046690886565735640, 0, -44811970383214068275788146, 0, -82753130306512449862802344, 0, -151919364770181057077625045, 0, -277302139218208403201606400, 0, -503354933036710590085002530, 0, -908746834505866021680319560, 0, -1632008501220981179229440787, 0, -2915905781929399622851898520, 0, -5183870270021505248587864200, 0, -9171066675556412716584632040, 0, -16148190121658608337881660811, 0, -28301999739828474446291254524, 0, -49379714239121274118353696540, 0, -85775875868085164604879290000, 0, -148358351532584785536637577040, 0, -255524440567424326042095817920, 0, -438296707669304291516937527158, 0, -748788945035009967783154296960, 0, -1274220959781484543257417001950, 0, -2160038100997382670693332131960, 0, -3647920187804957238597395636154, 0, -6138059906809046559598237953792, 0, -10290872936673061052452608690025, 0, -17192572923151886875023361071600, 0, -28623864756968492276524448102670, 0, -47494632332854072313063720212584, 0, -78545042735476912954542703065306, 0, -129472996639950919454878499164920, 0, -212741911980842566489572651478400, 0, -348471092528193142995984335287560, 0, -569044026814622859780787022243283, 0, -926435467534149312000131474217728, 0, -1503829809803020697480926677395550, 0, -2433995160937040031008110023312000, 0, -3928265497559316059785350948632210, 0, -6322138184866946185791067284647316, 0, -10146831613533865727211591735422094, 0, -16241304688670119123302392252149320, 0, -25927189949106487617953017305429750, 0, -41281320156834464307320209755318720, 0, -65559294362335154851941171008498806, 0, -103852266278655767063807348698017000, 0, -164103047700476819509061205263771805, 0, -258674571345273115934740598263655600, 0, -406765628204967500445854389599806700, 0, -638123476840387720721890781778249984, 0, -998737317410370910267339937324963892, 0, -1559551099652709820185215032643489880, 0, -2429769152388220141227041708891238600, 0, -3777134067393051827020848208493419560, 0, -5858768012697827021424300758195868444, 0, -9067987072476409810400263080815648832, 0, -14005221981892330449108172106649127960, 0, -21585251015676725905269599872163216400, 0, -33199028530051252211581020381197293545, 0, -50957447060421486202216569800655208896, 0, -78057836080971072400611086536980976422, 0, -119333990491291205589587070186923080320, 0, -182080147476386132570330178192687944000, 0, -277283162031218684887462409488301859840, 0, -421461873165329575312065203442769679844, 0, -639408122565044325100924834034133891088, 0, -968264441025084523807336350122833006050, 0, -1463580013588297365763052081577869818500, 0, -2208289722867653769907513561640725738830, 0, -3326005317949799560972446576678180278952, 0, -5000657687687386237984236236348888564160, 0, -7505478613298756439659984420181214144120, 0, -11245695131430875076938248221031743745200, 0, -16821326393885200464449785752933277313280, 0, -25119405793173782804298929656762494080852, 0, -37449210104402574772591486386723070748184, 0, -55740253200297239502745988351266858595850, 0, -82831744539007159729458746139754390404200, 0, -122895143549560201073564171960358318849390, 0, -182050113084868421081364480653363230575936, 0, -269261100357823857055434486416849497153778, 0, -397640547700898274173253757377376381507200, 0, -586340497551899941434921061603087233293925, 0, -863294443322680542387457018501441355397080, 0, -1269186151323792252791471997547476943724760, 0, -1863186735273177504846453382795245664100904, 0, -2731236690589382894946655862545684948850235, 0, -3997985985969840809502403967744304786058800, 0, -5843985363155969569552958618065180254887940, 0, -8530406219197319671713661270003900908687048, 0, -12434540480034930062007737771170810132465053, 0, -18100716793417630834225082204323391078895360, 0, -26313236139926569943933668557617105660598750, 0, -38200719726480250003421011999544376683842920, 0, -55385214525025057992014972270835992087707053, 0, -80194995155543718818583725310315772013670456, 0, -115967907063898105881278490720952802523584970, 0, -167483258813356424871041729230370462431958400, 0, -241576014453167625945099176939369105542676565, 0, -348009214936977740832334445077240761276233604, 0, -500711766133992024429805356686964925602944244, 0, -719532599209270194876699221786923468746943400, 0, -1032723805652186008273192893224272670833448700, 0, -1480451745738747264337364623570438743773923200, 0, -2119756182070611340324385673171213408175097544, 0, -3031546922473996791306543297660236997127525248, 0, -4330464357410866000315644583723225419906108990, 0, -6178761170427134945235462507192568343316610800, 0, -8805824206198246402014001319352244781113984590, 0, -12535599061810475764577333596471339082562675840, 0, -17825076167683455427328986461849370043134389918, 0, -25318243864037861074271126782640069913771242040, 0, -35921646659202711594575332023368397371851745400, 0, -50910092533776451790991555072132515101070905480, 0, -72074390003437162096638665704539752231960215110, 0, -101927619670934572335018426700434974227694739648, 0, -143992846620536560726412846577189890386252563220, 0, -203204034261872836786705519323386080749015339000, 0, -286464155365091457354618979404986816714411278920, 0, -403421387367529587641208725344182432704634594816, 0, -567547577178070679673298994748092033734199626098, 0, -797635266552713548607931635371777274687029663560, 0, -1119873772527368715506068295906200821072759625350, 0, -1570725622452537774607123988290744901618625263640, 0, -2200908211017797371101216014410951713162802165980, 0, -3080900297927543185208347795871324281424149470720, 0, -4308550398659191881430272843133002446376928497675, 0, -6019579926733863680463183351705063755152560748800, 0, -8402069513989101373456016939626366131922542140050, 0, -11716421402205566657982590671907858874634189028616, 0, -16322843822059380542139543461791643424959808684987, 0, -22719158785604852818322575585388314812303530321240, 0, -31592766002482270064574147771962322507110128066200, 0, -43892002194345255129714239602549906751070621185280, 0, -60924051927798853798028762801398687135389470627442, 0, -84489176226594115160553430317198701232386646521436, 0, -117064576565826274289043089207144867269975584785310, 0, -162056039945845123057899337027594071030089868624400, 0, -224142069424838550175246113118555216595631328653210, 0, -309744107099210423257476360568785639794089901159640, 0, -427668531348948274747748911181795849607133254509528, 0, -589982474936733046974970450727063593866490063298280, 0, -813207672445913952226232877518212864264940615919375, 0, -1119946535401860683970516423836764720381739674462640, 0, -1541095205675289328276550903894228499322007001267042, 0, -2118853131528257172825666431566438348591670449182720]).O(382)
res["q_expansions"][0]["hauptmodul_pretty"] += Pq.gen()**(-1) #Don't forget the first coeff, which we cannot construct from a list
res["q_expansions"][4]["modforms_pretty"] = []
res["q_expansions"][4]["modforms_pretty"].append(Pq([1, 0, 240, 0, 2160, 0, 6720, 0, 17520, 0, 30240, 0, 60480, 0, 82560, 0, 140400, 0, 181680, 0, 272160, 0, 319680, 0, 490560, 0, 527520, 0, 743040, 0, 846720, 0, 1123440, 0, 1179360, 0, 1635120, 0, 1646400, 0, 2207520, 0, 2311680, 0, 2877120, 0, 2920320, 0, 3931200, 0, 3780240, 0, 4747680, 0, 4905600, 0, 6026880, 0, 5853600, 0, 7620480, 0, 7150080, 0, 8987760, 0, 8951040, 0, 10614240, 0, 10402560, 0, 13262640, 0, 12156960, 0, 14817600, 0, 14770560, 0, 17690400, 0, 16541280, 0, 20805120, 0, 19081920, 0, 23336640, 0, 22891680, 0, 26282880, 0, 24917760, 0, 31456320, 0, 28318320, 0, 34022160, 0, 33022080, 0, 38508960, 0, 35730720, 0, 44150400, 0, 40279680, 0, 48297600, 0, 46099200, 0, 52682400, 0, 49291200, 0, 61810560, 0, 54475680, 0, 64350720, 0, 62497920, 0, 71902320, 0, 66467520, 0, 80559360, 0, 72183360, 0, 86093280, 0, 81768960, 0, 93623040, 0, 85898880, 0, 106282800, 0, 93364320, 0, 109412640, 0, 105846720, 0, 120187200, 0, 109969920, 0, 132935040, 0, 118329600, 0, 141553440, 0, 132451440, 0, 148871520, 0, 137229120, 0, 168752640, 0, 148599360, 0, 171737280, 0, 163900800, 0, 187012800, 0, 169192800, 0, 206025120, 0, 181466880, 0, 213183360, 0, 200202240, 0, 224259840, 0, 207446400, 0, 251657280, 0, 219041760, 0, 254864880, 0, 241997760, 0, 275957520, 0, 247272480, 0, 297198720, 0, 262254720, 0, 308599200, 0, 291271680, 0, 321576480, 0, 294010560, 0, 358108800, 0, 310807200, 0, 362517120, 0, 340394880, 0, 386463360, 0, 346295520, 0, 414892800, 0, 367960320, 0, 427312800, 0, 399332640, 0, 443620800, 0, 405699840, 0, 495331200, 0, 425494320, 0, 490281120, 0, 463155840, 0, 521955840, 0, 472530240, 0, 562481280, 0, 491612160, 0, 575218800, 0, 534293760, 0, 598207680, 0, 539542080, 0, 653425920, 0, 566361600, 0, 649650240, 0, 618105600, 0, 689925600, 0, 617124960, 0, 735920640, 0, 644548800, 0, 759386880, 0, 697697280, 0, 773089920, 0, 702656640, 0, 850444080, 0, 737553600, 0, 840278880, 0, 792912960, 0, 887458080, 0, 793908000, 0, 952620480, 0, 826308480, 0, 963144000, 0, 892775520, 0, 989729280, 0, 900910080, 0, 1078250880, 0, 928774560, 0, 1064966400, 0, 1000460160, 0, 1132457760, 0, 1004590080, 0, 1192062960, 0, 1039379520, 0, 1207513440, 0, 1127831040, 0, 1235062080, 0, 1117791360, 0, 1352332800, 0, 1158961680, 0, 1337394240, 0, 1246324800, 0, 1392980160, 0, 1242652320, 0, 1475107200, 0, 1300402560, 0, 1496422080, 0, 1380153600, 0, 1522735200, 0, 1376481600, 0, 1671092640, 0, 1423138080, 0, 1633201920, 0, 1525319040, 0, 1708387200, 0, 1531776960, 0, 1801820160, 0, 1570907520, 0, 1818996480, 0, 1687526400, 0, 1867017600, 0, 1672289280]).O(383))
res["q_expansions"][6]["cuspforms_pretty"] = []
res["q_expansions"][6]["cuspforms_pretty"].append(Pq([0, 1, 0, -12, 0, 54, 0, -88, 0, -99, 0, 540, 0, -418, 0, -648, 0, 594, 0, 836, 0, 1056, 0, -4104, 0, -209, 0, 4104, 0, -594, 0, 4256, 0, -6480, 0, -4752, 0, -298, 0, 5016, 0, 17226, 0, -12100, 0, -5346, 0, -1296, 0, -9063, 0, -7128, 0, 19494, 0, 29160, 0, -10032, 0, -7668, 0, -34738, 0, 8712, 0, -22572, 0, 21812, 0, 49248, 0, -46872, 0, 67562, 0, 2508, 0, -47520, 0, -76912, 0, -25191, 0, 67716, 0, 32076, 0, 7128, 0, 29754, 0, 36784, 0, -51072, 0, 45144, 0, -122398, 0, -53460, 0, 11286, 0, -27256, 0, 57024, 0, 122364, 0, 99902, 0, 3576, 0, -29646, 0, -221616, 0, 41382, 0, -52272, 0, 130549, 0, -206712, 0, -180036, 0, 336512, 0, 145200, 0, 100980, 0, -73568, 0, 221616, 0, -317142, 0, -148324, 0, 15552, 0, -225720, 0, -32076, 0, 108756, 0, 196614, 0, 74360, 0, -58806, 0, 229824, 0, 120878, 0, -233928, 0, 361152, 0, -111340, 0, -349920, 0, -491832, 0, -196569, 0, -82764, 0, 707454, 0, 18392, 0, 92016, 0, 493668, 0, -559450, 0, 416856, 0, -16092, 0, 320760, 0, -361152, 0, -724032, 0, 7106, 0, 270864, 0, -530442, 0, 56168, 0, -261744, 0, 52272, 0, 930204, 0, 406296, 0, 451440, 0, -339196, 0, 562464, 0, -653400, 0, -374528, 0, -810744, 0, -248292, 0, 779360, 0, 20691, 0, -744876, 0, -272746, 0, 570240, 0, -153846, 0, -69984, 0, 922944, 0, 1154736, 0, 657074, 0, -694980, 0, -489402, 0, -349448, 0, -812592, 0, 1341900, 0, -2216160, 0, -384912, 0, 132354, 0, 26224, 0, 58806, 0, 943272, 0, 1052676, 0, -357048, 0, 967518, 0, -518320, 0, -441408, 0, -112860, 0, 2222726, 0, -421344, 0, -196614, 0, -1552276, 0, -541728, 0, -1515888, 0, -1067021, 0, 1468776, 0, -1072170, 0, -414072, 0, 2216160, 0, 1715472, 0, 1064800, 0, -135432, 0, -1875852, 0, 1585892, 0, 327072, 0, -730728, 0, 584858, 0, 470448, 0, -2482866, 0, -320760, 0, -1468368, 0, 496584, 0, 87362, 0, -1198824, 0, 114048, 0, 377948, 0, 29502, 0, 1177848, 0, 639122, 0, 355752, 0, 2298240, 0, 2276560, 0, 2659392, 0, -2904660, 0, -3991570, 0, -1715472, 0, 1429218, 0, -2531088, 0, 627264, 0, 1161864, 0, -1777203, 0, -1566588, 0, 3648348, 0, -1089232, 0, -1705374, 0, -1715472, 0, 3505766, 0, 2160432, 0, 248292, 0, 4043852, 0, -4038144, 0, 5187456]).O(384))
res["q_expansions"][6]["modforms_pretty"] = []
res["q_expansions"][6]["modforms_pretty"].append(Pq([1, 0, -504, 0, -16632, 0, -122976, 0, -532728, 0, -1575504, 0, -4058208, 0, -8471232, 0, -17047800, 0, -29883672, 0, -51991632, 0, -81170208, 0, -129985632, 0, -187132176, 0, -279550656, 0, -384422976, 0, -545530104, 0, -715608432, 0, -986161176, 0, -1247954400, 0, -1665307728, 0, -2066980608, 0, -2678616864, 0, -3243917376, 0, -4159663200, 0, -4923450504, 0, -6175361808, 0, -7261732800, 0, -8954092224, 0, -10337619600, 0, -12685958208, 0, -14429092608, 0, -17456963832, 0, -19805530752, 0, -23615078256, 0, -26481071232, 0, -31587041304, 0, -34949354832, 0, -41182495200, 0, -45660250944, 0, -53291422800, 0, -58391525808, 0, -68210360064, 0, -74092255776, 0, -85796909856, 0, -93416358672, 0, -107049273408, 0, -115589884032, 0, -133109345376, 0, -142375996728, 0, -162473866632, 0, -174608457408, 0, -197798710032, 0, -210770528976, 0, -239637182400, 0, -253738070208, 0, -286539422400, 0, -304500873600, 0, -341141446800, 0, -360321847200, 0, -406335085632, 0, -425676536208, 0, -476160056064, 0, -502284758976, 0, -558622843128, 0, -584975182176, 0, -653582514816, 0, -680463054432, 0, -756398112624, 0, -791515839744, 0, -873875350656, 0, -909331593408, 0, -1010815205400, 0, -1044828083376, 0, -1153328709456, 0, -1201321922976, 0, -1319087800800, 0, -1364308856064, 0, -1506788281152, 0, -1550836425600, 0, -1705327105104, 0, -1764601070904, 0, -1926920351664, 0, -1985276484576, 0, -2184798502656, 0, -2236991958432, 0, -2445044440608, 0, -2522379182400, 0, -2745582285600, 0, -2814365962800, 0, -3082739836176, 0, -3145317614208, 0, -3428820666432, 0, -3520698596352, 0, -3814466173056, 0, -3901105454400, 0, -4259499175008, 0, -4328019490032, 0, -4698407892024, 0, -4812825142944, 0, -5204087182728, 0, -5297090653008, 0, -5762079094464, 0, -5842741334976, 0, -6329745853200, 0, -6461381380608, 0, -6955427456208, 0, -7068860723232, 0, -7675651569600, 0, -7754664733200, 0, -8373356316864, 0, -8527642579008, 0, -9169269988032, 0, -9285873304176, 0, -10048528828800, 0, -10140485717376, 0, -10926863917200, 0, -11095628111568, 0, -11890620957600, 0, -12027946525056, 0, -13003107163200, 0, -13072543169112, 0, -14047325694864, 0, -14247532297152, 0, -15251550886656, 0, -15385782825504, 0, -16575397046208, 0, -16651338181632, 0, -17875930980600, 0, -18078510409344, 0, -19304181011808, 0, -19444062784608, 0, -20934446004864, 0, -20975617555200, 0, -22455280796256, 0, -22700176732800, 0, -24205455212400, 0, -24323909126832, 0, -26120022711552, 0, -26151977728800, 0, -27990492292224, 0, -28203931703808, 0, -30007942582464, 0, -30138011209152, 0, -32346116456472, 0, -32315398869600, 0, -34479326751408, 0, -34739743201632, 0, -36941468057424, 0, -37013646978000, 0, -39643623458208, 0, -39565373779008, 0, -42212057580000, 0, -42430570758576, 0, -45022192250112, 0, -45105343492608, 0, -48262885247808, 0, -48076052249232, 0, -51177602044800, 0, -51428009070144, 0, -54570468938832, 0, -54523763255808, 0, -58231835339832, 0, -57992062990176, 0, -61719842779056, 0, -61912089130752, 0, -65514123991008, 0, -65465560746432, 0, -69915619065600, 0, -69480867024072, 0, -73820734628256, 0, -73994960239200, 0, -78315514355232, 0, -78101801615376, 0, -83238513019200, 0, -82753356071232, 0, -87858714309408, 0, -87918530716800, 0, -92874076772400, 0, -92618062437600, 0, -98741091116304, 0, -97909179430608, 0, -103795481268864, 0, -103865074834752, 0, -109725505243200, 0, -109251683204832, 0, -116183053679616, 0, -115250169190464, 0, -122178507421824, 0, -122055204902400, 0, -128736479995200, 0, -128114230583808]).O(383))
res["q_expansions"][6]["modforms_pretty"].append(Pq([0, 1, 0, -12, 0, 54, 0, -88, 0, -99, 0, 540, 0, -418, 0, -648, 0, 594, 0, 836, 0, 1056, 0, -4104, 0, -209, 0, 4104, 0, -594, 0, 4256, 0, -6480, 0, -4752, 0, -298, 0, 5016, 0, 17226, 0, -12100, 0, -5346, 0, -1296, 0, -9063, 0, -7128, 0, 19494, 0, 29160, 0, -10032, 0, -7668, 0, -34738, 0, 8712, 0, -22572, 0, 21812, 0, 49248, 0, -46872, 0, 67562, 0, 2508, 0, -47520, 0, -76912, 0, -25191, 0, 67716, 0, 32076, 0, 7128, 0, 29754, 0, 36784, 0, -51072, 0, 45144, 0, -122398, 0, -53460, 0, 11286, 0, -27256, 0, 57024, 0, 122364, 0, 99902, 0, 3576, 0, -29646, 0, -221616, 0, 41382, 0, -52272, 0, 130549, 0, -206712, 0, -180036, 0, 336512, 0, 145200, 0, 100980, 0, -73568, 0, 221616, 0, -317142, 0, -148324, 0, 15552, 0, -225720, 0, -32076, 0, 108756, 0, 196614, 0, 74360, 0, -58806, 0, 229824, 0, 120878, 0, -233928, 0, 361152, 0, -111340, 0, -349920, 0, -491832, 0, -196569, 0, -82764, 0, 707454, 0, 18392, 0, 92016, 0, 493668, 0, -559450, 0, 416856, 0, -16092, 0, 320760, 0, -361152, 0, -724032, 0, 7106, 0, 270864, 0, -530442, 0, 56168, 0, -261744, 0, 52272, 0, 930204, 0, 406296, 0, 451440, 0, -339196, 0, 562464, 0, -653400, 0, -374528, 0, -810744, 0, -248292, 0, 779360, 0, 20691, 0, -744876, 0, -272746, 0, 570240, 0, -153846, 0, -69984, 0, 922944, 0, 1154736, 0, 657074, 0, -694980, 0, -489402, 0, -349448, 0, -812592, 0, 1341900, 0, -2216160, 0, -384912, 0, 132354, 0, 26224, 0, 58806, 0, 943272, 0, 1052676, 0, -357048, 0, 967518, 0, -518320, 0, -441408, 0, -112860, 0, 2222726, 0, -421344, 0, -196614, 0, -1552276, 0, -541728, 0, -1515888, 0, -1067021, 0, 1468776, 0, -1072170, 0, -414072, 0, 2216160, 0, 1715472, 0, 1064800, 0, -135432, 0, -1875852, 0, 1585892, 0, 327072, 0, -730728, 0, 584858, 0, 470448, 0, -2482866, 0, -320760, 0, -1468368, 0, 496584, 0, 87362, 0, -1198824, 0, 114048, 0, 377948, 0, 29502, 0, 1177848, 0, 639122, 0, 355752, 0, 2298240, 0, 2276560, 0, 2659392, 0, -2904660, 0, -3991570, 0, -1715472, 0, 1429218, 0, -2531088, 0, 627264, 0, 1161864, 0, -1777203, 0, -1566588, 0, 3648348, 0, -1089232, 0, -1705374, 0, -1715472, 0, 3505766, 0, 2160432, 0, 248292, 0, 4043852, 0, -4038144]).O(383))

# Now consider the q-expansions in raw format defined over L
Pq.<q_2> = LaurentSeriesRing(L)
for weight in weights:
    if "hauptmodul_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["hauptmodul_raw"] = transform_u_v_factored_q_expansion_to_L(res["q_expansions"][weight]["hauptmodul_pretty"],L,v_L,u_interior_K,principal_cusp_width)
    if "cuspforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["cuspforms_raw"] = [transform_u_v_factored_q_expansion_to_L(cuspform,L,v_L,u_interior_K,principal_cusp_width) for cuspform in res["q_expansions"][weight]["cuspforms_pretty"]]
    if "modforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["modforms_raw"] = [transform_u_v_factored_q_expansion_to_L(modform,L,v_L,u_interior_K,principal_cusp_width) for modform in res["q_expansions"][weight]["modforms_pretty"]]

# Add the Eisenstein scaling constants as well
res["q_expansions"][4]["eisenstein_basis_factors
res["q_expansions"][4]["eisenstein_canonical_normalizations"] = {}
res["q_expansions"][6]["eisenstein_basis_factors"] = {}
res["q_expansions"][6]["eisenstein_canonical_normalizations"] = {}

# Now add the curve
F.<x> = FunctionField(L)
res["curve"] = (F([1728, 0, 1]))/(F([1]))

# Now add the embeddings
res["embeddings"] = {('(1 2)', '(1)(2)', '(1 2)'): 1}
