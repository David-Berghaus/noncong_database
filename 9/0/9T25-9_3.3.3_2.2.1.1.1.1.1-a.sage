# Sage script to reproduce the database data

# Define some helper functions that are needed to transform u-v-factored expansions to L
def convert_from_K_to_L(expression_in_K, v_L):
    """
    Given an expression in K, convert the expression efficiently to L by plugging in v(w).
    """
    if expression_in_K == 0:
        return 0
    coeffs = list(expression_in_K.polynomial())
    res = coeffs[-1]
    for i in range(len(coeffs)-2,-1,-1): #Horner's method
        res = res*v_L+coeffs[i]
    return res

def transform_u_v_factored_q_expansion_to_L(q_expansion, L, v_L, u_interior_K, principal_cusp_width):
    """
    Given a q_expansion that has coefficients of the form (expression_in_K)*u**u_pow, convert the coefficients to L.
    """
    if principal_cusp_width == 1:
        u = L(u_interior_K)
    else:
        u = L.gen()
    leading_order_exponent = q_expansion.valuation()
    coeffs = list(q_expansion)
    coeffs_L = []
    for coeff in coeffs:
        if coeff == 0 or coeff == 1:
            u_pow = 0
        else:
            u_pow = coeff.degree()
        coeffs_L.append(convert_from_K_to_L(coeff[u_pow],v_L)*u**u_pow)
    P = LaurentSeriesRing(L,q_expansion.variable())
    return P(coeffs_L).shift(leading_order_exponent).O(q_expansion.prec())

res = {} #The dictionary in which we store the results
res["G"] = ArithmeticSubgroup_Permutation(S2="(2,4)(6,7)",S3="(1,2,3)(4,5,6)(7,8,9)")
res["is_congruence"] = True
principal_cusp_width = 9
res["monodromy_group"] = "(C3 x C3 x C3) : A4"
P.<T> = PolynomialRing(QQ)
K.<v> = NumberField(P([-1, 1]),embedding=1.00000000000000+0.000000000000000*1j)
res["K"] = K
res["v"] = K.gen()
u_interior_K = -1
L.<w> = NumberField(P([1, 0, 0, -1, 0, 0, 1]),embedding=-0.173648177666930+-0.984807753012208*1j) #Base ring of the q-expansions in raw format
v_L = 1

# The pretty form of q-expansions involves powers of u, where u is given by
u_str = "(-1)^(1/9)"
res["u_str"] = u_str
# With embedding
res["u"] = QQbar(L.gen())
Pu.<u> = PolynomialRing(K)
Pq.<q_9> = LaurentSeriesRing(Pu)

# Store the q-expansions in pretty form into res
res["q_expansions"] = {}
weights = [0, 2, 4, 6]
for weight in weights:
    res["q_expansions"][weight] = {}
res["q_expansions"][0]["hauptmodul_pretty"] = Pq([0, -3*u^2, -2*u^3, 0, -6*u^5, 5*u^6, 0, 3*u^8, -6*u^9, 0, 18*u^11, 12*u^12, 0, 21*u^14, -16*u^15, 0, -6*u^17, 27*u^18, 0, -60*u^20, -34*u^21, 0, -72*u^23, 51*u^24, 0, 24*u^26, -70*u^27, 0, 168*u^29, 101*u^30, 0, 183*u^32, -134*u^33, 0, -54*u^35, 182*u^36, 0, -411*u^38, -240*u^39, 0, -450*u^41, 322*u^42, 0, 138*u^44, -416*u^45, 0, 936*u^47, 544*u^48, 0, 981*u^50, -696*u^51, 0, -282*u^53, 902*u^54, 0, -1989*u^56, -1144*u^57, 0, -2070*u^59, 1462*u^60, 0, 597*u^62, -1832*u^63, 0, 4026*u^65, 2317*u^66, 0, 4098*u^68, -2882*u^69, 0, -1152*u^71, 3608*u^72, 0, -7809*u^74, -4454*u^75, 0, -7896*u^77, 5524*u^78, 0, 2217*u^80, -6786*u^81, 0, 14652*u^83, 8352*u^84, 0, 14607*u^86, -10200*u^87, 0, -4032*u^89, 12463*u^90, 0, -26670*u^92, -15136*u^93, 0, -26424*u^95, 18384*u^96, 0, 7266*u^98, -22210*u^99, 0, 47352*u^101, 26826*u^102, 0, 46461*u^104, -32250*u^105, 0, -12636*u^107, 38768*u^108, 0, -82167*u^110, -46408*u^111, 0, -80184*u^113, 55531*u^114, 0, 21726*u^116, -66186*u^117, 0, 139824*u^119, 78859*u^120, 0, 135465*u^122, -93638*u^123, 0, -36408*u^125, 111123*u^126, 0, -233664*u^128, -131462*u^129, 0, -225306*u^131, 155428*u^132, 0, 60324*u^134, -183280*u^135, 0, 384318*u^137, 215951*u^138, 0, 368490*u^140, -253832*u^141, 0, -98064*u^143, 298090*u^144, 0, -622827*u^146, -349334*u^147, 0, -594714*u^149]).O(149)
res["q_expansions"][0]["hauptmodul_pretty"] += Pq.gen()**(-1) #Don't forget the first coeff, which we cannot construct from a list
res["q_expansions"][4]["cuspforms_pretty"] = []
res["q_expansions"][4]["cuspforms_pretty"].append(Pq([0, 1, 0, 0, -4*u^3, 9*u^4, 0, 14*u^6, 36*u^7, 0, -24*u^9, 18*u^10, 0, 41*u^12, -72*u^13, 0, -28*u^15, -45*u^16, 0, 38*u^18, 36*u^19, 0, 24*u^21, -90*u^22, 0, 4*u^24, -72*u^25, 0, 160*u^27, 81*u^28, 0, -76*u^30, 36*u^31, 0, 288*u^33, 270*u^34, 0, 65*u^36, 216*u^37, 0, 204*u^39, -378*u^40, 0, 194*u^42, -144*u^43, 0, 264*u^45, 144*u^46, 0, 285*u^48, -288*u^49, 0, 52*u^51, -162*u^52, 0, 114*u^54, 144*u^55, 0, 312*u^57, 36*u^58, 0, -103*u^60, 576*u^61, 0, -604*u^63, 513*u^64, 0, 518*u^66, -684*u^67, 0, -552*u^69, -234*u^70, 0, -25*u^72, 216*u^73, 0, -800*u^75, 108*u^76, 0, 698*u^78, 396*u^79, 0, 336*u^81, -432*u^82, 0, -981*u^84, -72*u^85, 0, 768*u^87, -117*u^88, 0, 1006*u^90, -432*u^91, 0, -48*u^93, -90*u^94, 0, -346*u^96, -720*u^97, 0, 848*u^99, 306*u^100, 0, 608*u^102, 1116*u^103, 0, 0, 972*u^106, 0, -1555*u^108, -360*u^109, 0, 1552*u^111, -153*u^112, 0, -1338*u^114, -1260*u^115, 0, -1104*u^117, -2358*u^118, 0, -959*u^120, 1656*u^121, 0, -1424*u^123, -513*u^124, 0, -1042*u^126, 36*u^127, 0, -1200*u^129, 882*u^130, 0, -764*u^132, -936*u^133, 0, -180*u^135, 1863*u^136, 0, -184*u^138, 576*u^139, 0, 1368*u^141, 594*u^142, 0, 105*u^144, -1296*u^145, 0, -908*u^147, 1917*u^148]).O(151))
res["q_expansions"][4]["cuspforms_pretty"].append(Pq([0, 0, 1, 0, -3*u^2, -2*u^3, 0, -6*u^5, 5*u^6, 0, 3*u^8, 2*u^9, 0, -6*u^11, -4*u^12, 0, -27*u^14, 24*u^15, 0, 18*u^17, -u^18, 0, 24*u^20, 22*u^21, 0, -24*u^23, 23*u^24, 0, 36*u^26, 26*u^27, 0, 48*u^29, 69*u^30, 0, 27*u^32, -46*u^33, 0, 18*u^35, 92*u^36, 0, -57*u^38, 28*u^39, 0, -6*u^41, -80*u^42, 0, -24*u^44, -4*u^45, 0, -60*u^47, -68*u^48, 0, -45*u^50, 0, 0, -30*u^53, -236*u^54, 0, 159*u^56, -92*u^57, 0, 138*u^59, 68*u^60, 0, -27*u^62, -100*u^63, 0, -78*u^65, -177*u^66, 0, 132*u^68, 114*u^69, 0, -108*u^71, 119*u^72, 0, -348*u^74, -116*u^75, 0, -6*u^77, -25*u^78, 0, -294*u^80, -100*u^81, 0, 162*u^83, 176*u^84, 0, 192*u^86, -240*u^87, 0, -222*u^89, -16*u^90, 0, 132*u^92, -22*u^93, 0, -60*u^95, 105*u^96, 0, 300*u^98, 212*u^99, 0, -132*u^101, -101*u^102, 0, -162*u^104, 0, 0, 234*u^107, 24*u^108, 0, 276*u^110, 376*u^111, 0, 246*u^113, -581*u^114, 0, -240*u^116, 174*u^117, 0, 84*u^119, 311*u^120, 0, -396*u^122, 170*u^123, 0, 558*u^125, 133*u^126, 0, 213*u^128, 238*u^129, 0, -300*u^131, 284*u^132, 0, 999*u^134, -352*u^135, 0, 156*u^137, -212*u^138, 0, 108*u^140, -62*u^141, 0, -84*u^143, -349*u^144, 0, -429*u^146, -602*u^147]).O(151))
res["q_expansions"][4]["cuspforms_pretty"].append(Pq([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 8*u^9, 0, 0, 0, 0, 0, 0, 0, 0, 20*u^18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -70*u^36, 0, 0, 0, 0, 0, 0, 0, 0, -64*u^45, 0, 0, 0, 0, 0, 0, 0, 0, 56*u^54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125*u^72, 0, 0, 0, 0, 0, 0, 0, 0, 160*u^81, 0, 0, 0, 0, 0, 0, 0, 0, 308*u^90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110*u^108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -520*u^126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57*u^144]).O(151))
res["q_expansions"][4]["modforms_pretty"] = []
res["q_expansions"][4]["modforms_pretty"].append(Pq([1, 0, 0, 0, 0, 0, 0, 0, 0, -240*u^9, 0, 0, 0, 0, 0, 0, 0, 0, 2160*u^18, 0, 0, 0, 0, 0, 0, 0, 0, -6720*u^27, 0, 0, 0, 0, 0, 0, 0, 0, 17520*u^36, 0, 0, 0, 0, 0, 0, 0, 0, -30240*u^45, 0, 0, 0, 0, 0, 0, 0, 0, 60480*u^54, 0, 0, 0, 0, 0, 0, 0, 0, -82560*u^63, 0, 0, 0, 0, 0, 0, 0, 0, 140400*u^72, 0, 0, 0, 0, 0, 0, 0, 0, -181680*u^81, 0, 0, 0, 0, 0, 0, 0, 0, 272160*u^90, 0, 0, 0, 0, 0, 0, 0, 0, -319680*u^99, 0, 0, 0, 0, 0, 0, 0, 0, 490560*u^108, 0, 0, 0, 0, 0, 0, 0, 0, -527520*u^117, 0, 0, 0, 0, 0, 0, 0, 0, 743040*u^126, 0, 0, 0, 0, 0, 0, 0, 0, -846720*u^135, 0, 0, 0, 0, 0, 0, 0, 0, 1123440*u^144]).O(150))
res["q_expansions"][4]["modforms_pretty"].append(Pq([0, 1, 0, 0, -4*u^3, 9*u^4, 0, 14*u^6, 36*u^7, 0, -24*u^9, 18*u^10, 0, 41*u^12, -72*u^13, 0, -28*u^15, -45*u^16, 0, 38*u^18, 36*u^19, 0, 24*u^21, -90*u^22, 0, 4*u^24, -72*u^25, 0, 160*u^27, 81*u^28, 0, -76*u^30, 36*u^31, 0, 288*u^33, 270*u^34, 0, 65*u^36, 216*u^37, 0, 204*u^39, -378*u^40, 0, 194*u^42, -144*u^43, 0, 264*u^45, 144*u^46, 0, 285*u^48, -288*u^49, 0, 52*u^51, -162*u^52, 0, 114*u^54, 144*u^55, 0, 312*u^57, 36*u^58, 0, -103*u^60, 576*u^61, 0, -604*u^63, 513*u^64, 0, 518*u^66, -684*u^67, 0, -552*u^69, -234*u^70, 0, -25*u^72, 216*u^73, 0, -800*u^75, 108*u^76, 0, 698*u^78, 396*u^79, 0, 336*u^81, -432*u^82, 0, -981*u^84, -72*u^85, 0, 768*u^87, -117*u^88, 0, 1006*u^90, -432*u^91, 0, -48*u^93, -90*u^94, 0, -346*u^96, -720*u^97, 0, 848*u^99, 306*u^100, 0, 608*u^102, 1116*u^103, 0, 0, 972*u^106, 0, -1555*u^108, -360*u^109, 0, 1552*u^111, -153*u^112, 0, -1338*u^114, -1260*u^115, 0, -1104*u^117, -2358*u^118, 0, -959*u^120, 1656*u^121, 0, -1424*u^123, -513*u^124, 0, -1042*u^126, 36*u^127, 0, -1200*u^129, 882*u^130, 0, -764*u^132, -936*u^133, 0, -180*u^135, 1863*u^136, 0, -184*u^138, 576*u^139, 0, 1368*u^141, 594*u^142, 0, 105*u^144, -1296*u^145, 0, -908*u^147, 1917*u^148]).O(150))
res["q_expansions"][4]["modforms_pretty"].append(Pq([0, 0, 1, 0, -3*u^2, -2*u^3, 0, -6*u^5, 5*u^6, 0, 3*u^8, 2*u^9, 0, -6*u^11, -4*u^12, 0, -27*u^14, 24*u^15, 0, 18*u^17, -u^18, 0, 24*u^20, 22*u^21, 0, -24*u^23, 23*u^24, 0, 36*u^26, 26*u^27, 0, 48*u^29, 69*u^30, 0, 27*u^32, -46*u^33, 0, 18*u^35, 92*u^36, 0, -57*u^38, 28*u^39, 0, -6*u^41, -80*u^42, 0, -24*u^44, -4*u^45, 0, -60*u^47, -68*u^48, 0, -45*u^50, 0, 0, -30*u^53, -236*u^54, 0, 159*u^56, -92*u^57, 0, 138*u^59, 68*u^60, 0, -27*u^62, -100*u^63, 0, -78*u^65, -177*u^66, 0, 132*u^68, 114*u^69, 0, -108*u^71, 119*u^72, 0, -348*u^74, -116*u^75, 0, -6*u^77, -25*u^78, 0, -294*u^80, -100*u^81, 0, 162*u^83, 176*u^84, 0, 192*u^86, -240*u^87, 0, -222*u^89, -16*u^90, 0, 132*u^92, -22*u^93, 0, -60*u^95, 105*u^96, 0, 300*u^98, 212*u^99, 0, -132*u^101, -101*u^102, 0, -162*u^104, 0, 0, 234*u^107, 24*u^108, 0, 276*u^110, 376*u^111, 0, 246*u^113, -581*u^114, 0, -240*u^116, 174*u^117, 0, 84*u^119, 311*u^120, 0, -396*u^122, 170*u^123, 0, 558*u^125, 133*u^126, 0, 213*u^128, 238*u^129, 0, -300*u^131, 284*u^132, 0, 999*u^134, -352*u^135, 0, 156*u^137, -212*u^138, 0, 108*u^140, -62*u^141, 0, -84*u^143, -349*u^144, 0, -429*u^146, -602*u^147]).O(150))
res["q_expansions"][4]["modforms_pretty"].append(Pq([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 8*u^9, 0, 0, 0, 0, 0, 0, 0, 0, 20*u^18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -70*u^36, 0, 0, 0, 0, 0, 0, 0, 0, -64*u^45, 0, 0, 0, 0, 0, 0, 0, 0, 56*u^54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125*u^72, 0, 0, 0, 0, 0, 0, 0, 0, 160*u^81, 0, 0, 0, 0, 0, 0, 0, 0, 308*u^90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110*u^108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -520*u^126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57*u^144]).O(150))
res["q_expansions"][6]["cuspforms_pretty"] = []
res["q_expansions"][6]["cuspforms_pretty"].append(Pq([0, 1, 0, 0, 2*u^3, -9*u^4, 0, -28*u^6, -90*u^7, 0, 120*u^9, -72*u^10, 0, -349*u^12, 720*u^13, 0, 686*u^15, 1611*u^16, 0, -1276*u^18, 342*u^19, 0, 1680*u^21, -2664*u^22, 0, -2564*u^24, -4680*u^25, 0, 2104*u^27, -1701*u^28, 0, -3076*u^30, 5310*u^31, 0, 720*u^33, 3132*u^34, 0, -3157*u^36, -2160*u^37, 0, -2190*u^39, 5562*u^40, 0, -1504*u^42, 4896*u^43, 0, -8880*u^45, -3492*u^46, 0, 1257*u^48, -3600*u^49, 0, -14738*u^51, -21546*u^52, 0, 7368*u^54, -15480*u^55, 0, -26760*u^57, 37872*u^58, 0, 12275*u^60, 24480*u^61, 0, -18082*u^63, -15579*u^64, 0, -1276*u^66, 5382*u^67, 0, -18480*u^69, -28332*u^70, 0, -853*u^72, -31320*u^73, 0, -9032*u^75, 42336*u^76, 0, -31816*u^78, -15894*u^79, 0, -29760*u^81, -33588*u^82, 0, -11619*u^84, 78480*u^85, 0, -35520*u^87, 40995*u^88, 0, -102548*u^90, -31968*u^91, 0, 9600*u^93, 2844*u^94, 0, -98974*u^96, -92160*u^97, 0, -15928*u^99, -89514*u^100, 0, -144916*u^102, 148410*u^103, 0, 25920*u^105, 70308*u^106, 0, -40921*u^108, -43920*u^109, 0, -77528*u^111, 13599*u^112, 0, -11544*u^114, -83682*u^115, 0, 89760*u^117, -27828*u^118, 0, -61787*u^120, 103320*u^121, 0, 67288*u^123, 36801*u^124, 0, 8552*u^126, -76770*u^127, 0, 56400*u^129, 96804*u^130, 0, -16112*u^132, 78480*u^133, 0, -162990*u^135, -130977*u^136, 0, 145748*u^138, -49176*u^139, 0, -318960*u^141, -236952*u^142, 0, -91731*u^144, -64800*u^145, 0, -100274*u^147, 200259*u^148]).O(151))
res["q_expansions"][6]["cuspforms_pretty"].append(Pq([0, 0, 1, 0, 3*u^2, 4*u^3, 0, 24*u^5, -25*u^6, 0, -21*u^8, 56*u^9, 0, -156*u^11, -100*u^12, 0, -81*u^14, 24*u^15, 0, -72*u^17, -55*u^18, 0, -240*u^20, -296*u^21, 0, -120*u^23, 119*u^24, 0, -252*u^26, -892*u^27, 0, 816*u^29, -129*u^30, 0, 1539*u^32, -616*u^33, 0, -1044*u^35, -1060*u^36, 0, 165*u^38, -992*u^39, 0, 2616*u^41, -608*u^42, 0, -1776*u^44, 320*u^45, 0, -3072*u^47, -2204*u^48, 0, 45*u^50, 864*u^51, 0, -1464*u^53, 340*u^54, 0, 975*u^56, 2992*u^57, 0, 3444*u^59, -5524*u^60, 0, -3105*u^62, 1880*u^63, 0, 2616*u^65, 4665*u^66, 0, 4980*u^68, -10632*u^69, 0, -2160*u^71, -25*u^72, 0, -3324*u^74, -7328*u^75, 0, -6456*u^77, 4445*u^78, 0, 8538*u^80, -12304*u^81, 0, 5940*u^83, -9352*u^84, 0, 960*u^86, 10992*u^87, 0, 7224*u^89, -5920*u^90, 0, -4452*u^92, -3592*u^93, 0, -1056*u^95, 10473*u^96, 0, -6852*u^98, 8096*u^99, 0, -9696*u^101, 11065*u^102, 0, -24138*u^104, 22464*u^105, 0, 8460*u^107, 11760*u^108, 0, 24564*u^110, 35536*u^111, 0, -4440*u^113, 1141*u^114, 0, 28896*u^116, 36264*u^117, 0, -17472*u^119, 1943*u^120, 0, -14940*u^122, -20236*u^123, 0, -3528*u^125, 12895*u^126, 0, -21219*u^128, -18872*u^129, 0, -23424*u^131, -9124*u^132, 0, -40635*u^134, -16120*u^135, 0, 32784*u^137, 13708*u^138, 0, 3564*u^140, 17896*u^141, 0, 11928*u^143, 5627*u^144, 0, -2163*u^146, -9236*u^147]).O(151))
res["q_expansions"][6]["modforms_pretty"] = []
res["q_expansions"][6]["modforms_pretty"].append(Pq([1, 0, 0, 0, 0, 0, 0, 0, 0, 504*u^9, 0, 0, 0, 0, 0, 0, 0, 0, -16632*u^18, 0, 0, 0, 0, 0, 0, 0, 0, 122976*u^27, 0, 0, 0, 0, 0, 0, 0, 0, -532728*u^36, 0, 0, 0, 0, 0, 0, 0, 0, 1575504*u^45, 0, 0, 0, 0, 0, 0, 0, 0, -4058208*u^54, 0, 0, 0, 0, 0, 0, 0, 0, 8471232*u^63, 0, 0, 0, 0, 0, 0, 0, 0, -17047800*u^72, 0, 0, 0, 0, 0, 0, 0, 0, 29883672*u^81, 0, 0, 0, 0, 0, 0, 0, 0, -51991632*u^90, 0, 0, 0, 0, 0, 0, 0, 0, 81170208*u^99, 0, 0, 0, 0, 0, 0, 0, 0, -129985632*u^108, 0, 0, 0, 0, 0, 0, 0, 0, 187132176*u^117, 0, 0, 0, 0, 0, 0, 0, 0, -279550656*u^126, 0, 0, 0, 0, 0, 0, 0, 0, 384422976*u^135, 0, 0, 0, 0, 0, 0, 0, 0, -545530104*u^144]).O(150))
res["q_expansions"][6]["modforms_pretty"].append(Pq([0, 1, 0, 0, 2*u^3, -9*u^4, 0, -28*u^6, -90*u^7, 0, 120*u^9, -72*u^10, 0, -349*u^12, 720*u^13, 0, 686*u^15, 1611*u^16, 0, -1276*u^18, 342*u^19, 0, 1680*u^21, -2664*u^22, 0, -2564*u^24, -4680*u^25, 0, 2104*u^27, -1701*u^28, 0, -3076*u^30, 5310*u^31, 0, 720*u^33, 3132*u^34, 0, -3157*u^36, -2160*u^37, 0, -2190*u^39, 5562*u^40, 0, -1504*u^42, 4896*u^43, 0, -8880*u^45, -3492*u^46, 0, 1257*u^48, -3600*u^49, 0, -14738*u^51, -21546*u^52, 0, 7368*u^54, -15480*u^55, 0, -26760*u^57, 37872*u^58, 0, 12275*u^60, 24480*u^61, 0, -18082*u^63, -15579*u^64, 0, -1276*u^66, 5382*u^67, 0, -18480*u^69, -28332*u^70, 0, -853*u^72, -31320*u^73, 0, -9032*u^75, 42336*u^76, 0, -31816*u^78, -15894*u^79, 0, -29760*u^81, -33588*u^82, 0, -11619*u^84, 78480*u^85, 0, -35520*u^87, 40995*u^88, 0, -102548*u^90, -31968*u^91, 0, 9600*u^93, 2844*u^94, 0, -98974*u^96, -92160*u^97, 0, -15928*u^99, -89514*u^100, 0, -144916*u^102, 148410*u^103, 0, 25920*u^105, 70308*u^106, 0, -40921*u^108, -43920*u^109, 0, -77528*u^111, 13599*u^112, 0, -11544*u^114, -83682*u^115, 0, 89760*u^117, -27828*u^118, 0, -61787*u^120, 103320*u^121, 0, 67288*u^123, 36801*u^124, 0, 8552*u^126, -76770*u^127, 0, 56400*u^129, 96804*u^130, 0, -16112*u^132, 78480*u^133, 0, -162990*u^135, -130977*u^136, 0, 145748*u^138, -49176*u^139, 0, -318960*u^141, -236952*u^142, 0, -91731*u^144, -64800*u^145, 0, -100274*u^147, 200259*u^148]).O(150))
res["q_expansions"][6]["modforms_pretty"].append(Pq([0, 0, 1, 0, 3*u^2, 4*u^3, 0, 24*u^5, -25*u^6, 0, -21*u^8, 56*u^9, 0, -156*u^11, -100*u^12, 0, -81*u^14, 24*u^15, 0, -72*u^17, -55*u^18, 0, -240*u^20, -296*u^21, 0, -120*u^23, 119*u^24, 0, -252*u^26, -892*u^27, 0, 816*u^29, -129*u^30, 0, 1539*u^32, -616*u^33, 0, -1044*u^35, -1060*u^36, 0, 165*u^38, -992*u^39, 0, 2616*u^41, -608*u^42, 0, -1776*u^44, 320*u^45, 0, -3072*u^47, -2204*u^48, 0, 45*u^50, 864*u^51, 0, -1464*u^53, 340*u^54, 0, 975*u^56, 2992*u^57, 0, 3444*u^59, -5524*u^60, 0, -3105*u^62, 1880*u^63, 0, 2616*u^65, 4665*u^66, 0, 4980*u^68, -10632*u^69, 0, -2160*u^71, -25*u^72, 0, -3324*u^74, -7328*u^75, 0, -6456*u^77, 4445*u^78, 0, 8538*u^80, -12304*u^81, 0, 5940*u^83, -9352*u^84, 0, 960*u^86, 10992*u^87, 0, 7224*u^89, -5920*u^90, 0, -4452*u^92, -3592*u^93, 0, -1056*u^95, 10473*u^96, 0, -6852*u^98, 8096*u^99, 0, -9696*u^101, 11065*u^102, 0, -24138*u^104, 22464*u^105, 0, 8460*u^107, 11760*u^108, 0, 24564*u^110, 35536*u^111, 0, -4440*u^113, 1141*u^114, 0, 28896*u^116, 36264*u^117, 0, -17472*u^119, 1943*u^120, 0, -14940*u^122, -20236*u^123, 0, -3528*u^125, 12895*u^126, 0, -21219*u^128, -18872*u^129, 0, -23424*u^131, -9124*u^132, 0, -40635*u^134, -16120*u^135, 0, 32784*u^137, 13708*u^138, 0, 3564*u^140, 17896*u^141, 0, 11928*u^143, 5627*u^144, 0, -2163*u^146, -9236*u^147]).O(150))

# Now consider the q-expansions in raw format defined over L
Pq.<q_9> = LaurentSeriesRing(L)
for weight in weights:
    if "hauptmodul_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["hauptmodul_raw"] = transform_u_v_factored_q_expansion_to_L(res["q_expansions"][weight]["hauptmodul_pretty"],L,v_L,u_interior_K,principal_cusp_width)
    if "cuspforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["cuspforms_raw"] = [transform_u_v_factored_q_expansion_to_L(cuspform,L,v_L,u_interior_K,principal_cusp_width) for cuspform in res["q_expansions"][weight]["cuspforms_pretty"]]
    if "modforms_pretty" in res["q_expansions"][weight]:
        res["q_expansions"][weight]["modforms_raw"] = [transform_u_v_factored_q_expansion_to_L(modform,L,v_L,u_interior_K,principal_cusp_width) for modform in res["q_expansions"][weight]["modforms_pretty"]]

# Add the Eisenstein scaling constants as well
res["q_expansions"][4]["eisenstein_basis_factors"] = {}
res["q_expansions"][4]["eisenstein_canonical_normalizations"] = {0: [1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]}
res["q_expansions"][6]["eisenstein_basis_factors"] = {}
res["q_expansions"][6]["eisenstein_canonical_normalizations"] = {}

# Now add the curve
F.<x> = FunctionField(L)
res["curve"] = (F([-216, 972*w^5 - 972*w^2, 1458*w^4 - 1458*w, 837*w^3 - 837, 324*w^5, 243*w^4, 18*w^3, 27*w^2, 0, 1]))/(F([1]))

# Now add the embeddings
res["embeddings"] = {('(1)(2)(3 9)(4 7)(5)(6)(8)', '(1 2 3)(4 8 9)(5 6 7)', '(1 2 3 4 5 6 7 8 9)'): 1}
